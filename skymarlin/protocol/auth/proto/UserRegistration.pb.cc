// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserRegistration.proto

#include "UserRegistration.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace skymarlin {
namespace protocol {
namespace auth {

inline constexpr UserRegistrationResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::skymarlin::protocol::auth::UserRegistrationResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserRegistrationResult::UserRegistrationResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserRegistrationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRegistrationResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRegistrationResultDefaultTypeInternal() {}
  union {
    UserRegistrationResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRegistrationResultDefaultTypeInternal _UserRegistrationResult_default_instance_;

inline constexpr UserRegistration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_pw_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserRegistration::UserRegistration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRegistrationDefaultTypeInternal() {}
  union {
    UserRegistration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRegistrationDefaultTypeInternal _UserRegistration_default_instance_;
}  // namespace auth
}  // namespace protocol
}  // namespace skymarlin
static ::_pb::Metadata file_level_metadata_UserRegistration_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_UserRegistration_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_UserRegistration_2eproto = nullptr;
const ::uint32_t TableStruct_UserRegistration_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::skymarlin::protocol::auth::UserRegistration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::skymarlin::protocol::auth::UserRegistration, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::skymarlin::protocol::auth::UserRegistration, _impl_.user_pw_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::skymarlin::protocol::auth::UserRegistrationResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::skymarlin::protocol::auth::UserRegistrationResult, _impl_.result_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::skymarlin::protocol::auth::UserRegistration)},
        {10, -1, -1, sizeof(::skymarlin::protocol::auth::UserRegistrationResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::skymarlin::protocol::auth::_UserRegistration_default_instance_._instance,
    &::skymarlin::protocol::auth::_UserRegistrationResult_default_instance_._instance,
};
const char descriptor_table_protodef_UserRegistration_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026UserRegistration.proto\022\027skymarlin.prot"
    "ocol.auth\"4\n\020UserRegistration\022\017\n\007user_id"
    "\030\001 \001(\t\022\017\n\007user_pw\030\002 \001(\t\"\263\001\n\026UserRegistra"
    "tionResult\022F\n\006result\030\001 \001(\01626.skymarlin.p"
    "rotocol.auth.UserRegistrationResult.Resu"
    "lt\"Q\n\006Result\022\026\n\022EmailInvalidFormat\020\000\022\032\n\026"
    "EmailAlreadyRegistered\020\001\022\023\n\017PasswordInva"
    "lid\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_UserRegistration_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_UserRegistration_2eproto = {
    false,
    false,
    293,
    descriptor_table_protodef_UserRegistration_2eproto,
    "UserRegistration.proto",
    &descriptor_table_UserRegistration_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_UserRegistration_2eproto::offsets,
    file_level_metadata_UserRegistration_2eproto,
    file_level_enum_descriptors_UserRegistration_2eproto,
    file_level_service_descriptors_UserRegistration_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_UserRegistration_2eproto_getter() {
  return &descriptor_table_UserRegistration_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_UserRegistration_2eproto(&descriptor_table_UserRegistration_2eproto);
namespace skymarlin {
namespace protocol {
namespace auth {
const ::google::protobuf::EnumDescriptor* UserRegistrationResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_UserRegistration_2eproto);
  return file_level_enum_descriptors_UserRegistration_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t UserRegistrationResult_Result_internal_data_[] = {
    196608u, 0u, };
bool UserRegistrationResult_Result_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr UserRegistrationResult_Result UserRegistrationResult::EmailInvalidFormat;
constexpr UserRegistrationResult_Result UserRegistrationResult::EmailAlreadyRegistered;
constexpr UserRegistrationResult_Result UserRegistrationResult::PasswordInvalid;
constexpr UserRegistrationResult_Result UserRegistrationResult::Result_MIN;
constexpr UserRegistrationResult_Result UserRegistrationResult::Result_MAX;
constexpr int UserRegistrationResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class UserRegistration::_Internal {
 public:
};

UserRegistration::UserRegistration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:skymarlin.protocol.auth.UserRegistration)
}
inline PROTOBUF_NDEBUG_INLINE UserRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : user_id_(arena, from.user_id_),
        user_pw_(arena, from.user_pw_),
        _cached_size_{0} {}

UserRegistration::UserRegistration(
    ::google::protobuf::Arena* arena,
    const UserRegistration& from)
    : ::google::protobuf::Message(arena) {
  UserRegistration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:skymarlin.protocol.auth.UserRegistration)
}
inline PROTOBUF_NDEBUG_INLINE UserRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        user_pw_(arena),
        _cached_size_{0} {}

inline void UserRegistration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserRegistration::~UserRegistration() {
  // @@protoc_insertion_point(destructor:skymarlin.protocol.auth.UserRegistration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserRegistration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.user_pw_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:skymarlin.protocol.auth.UserRegistration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.user_pw_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserRegistration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> UserRegistration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserRegistration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string user_pw = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.user_pw_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_pw = 2;
    {PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.user_pw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\7\7\0\0\0\0\0"
    "skymarlin.protocol.auth.UserRegistration"
    "user_id"
    "user_pw"
  }},
};

::uint8_t* UserRegistration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:skymarlin.protocol.auth.UserRegistration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    const std::string& _s = this->_internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "skymarlin.protocol.auth.UserRegistration.user_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string user_pw = 2;
  if (!this->_internal_user_pw().empty()) {
    const std::string& _s = this->_internal_user_pw();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "skymarlin.protocol.auth.UserRegistration.user_pw");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skymarlin.protocol.auth.UserRegistration)
  return target;
}

::size_t UserRegistration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skymarlin.protocol.auth.UserRegistration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_id());
  }

  // string user_pw = 2;
  if (!this->_internal_user_pw().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_pw());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserRegistration::_class_data_ = {
    UserRegistration::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserRegistration::GetClassData() const {
  return &_class_data_;
}

void UserRegistration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserRegistration*>(&to_msg);
  auto& from = static_cast<const UserRegistration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:skymarlin.protocol.auth.UserRegistration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_user_pw().empty()) {
    _this->_internal_set_user_pw(from._internal_user_pw());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserRegistration::CopyFrom(const UserRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skymarlin.protocol.auth.UserRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserRegistration::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserRegistration::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserRegistration::InternalSwap(UserRegistration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_pw_, &other->_impl_.user_pw_, arena);
}

::google::protobuf::Metadata UserRegistration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_UserRegistration_2eproto_getter, &descriptor_table_UserRegistration_2eproto_once,
      file_level_metadata_UserRegistration_2eproto[0]);
}
// ===================================================================

class UserRegistrationResult::_Internal {
 public:
};

UserRegistrationResult::UserRegistrationResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:skymarlin.protocol.auth.UserRegistrationResult)
}
UserRegistrationResult::UserRegistrationResult(
    ::google::protobuf::Arena* arena, const UserRegistrationResult& from)
    : UserRegistrationResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UserRegistrationResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserRegistrationResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
UserRegistrationResult::~UserRegistrationResult() {
  // @@protoc_insertion_point(destructor:skymarlin.protocol.auth.UserRegistrationResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserRegistrationResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserRegistrationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:skymarlin.protocol.auth.UserRegistrationResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserRegistrationResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> UserRegistrationResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserRegistrationResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .skymarlin.protocol.auth.UserRegistrationResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserRegistrationResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UserRegistrationResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .skymarlin.protocol.auth.UserRegistrationResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(UserRegistrationResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UserRegistrationResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:skymarlin.protocol.auth.UserRegistrationResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .skymarlin.protocol.auth.UserRegistrationResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skymarlin.protocol.auth.UserRegistrationResult)
  return target;
}

::size_t UserRegistrationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skymarlin.protocol.auth.UserRegistrationResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .skymarlin.protocol.auth.UserRegistrationResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserRegistrationResult::_class_data_ = {
    UserRegistrationResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserRegistrationResult::GetClassData() const {
  return &_class_data_;
}

void UserRegistrationResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserRegistrationResult*>(&to_msg);
  auto& from = static_cast<const UserRegistrationResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:skymarlin.protocol.auth.UserRegistrationResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserRegistrationResult::CopyFrom(const UserRegistrationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skymarlin.protocol.auth.UserRegistrationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserRegistrationResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserRegistrationResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserRegistrationResult::InternalSwap(UserRegistrationResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata UserRegistrationResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_UserRegistration_2eproto_getter, &descriptor_table_UserRegistration_2eproto_once,
      file_level_metadata_UserRegistration_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace auth
}  // namespace protocol
}  // namespace skymarlin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
